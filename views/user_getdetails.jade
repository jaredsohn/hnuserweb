extends layout

block content
  p created: #{data.userinfo_days_ago} days ago
  p karma: #{data.userinfo_karma}
  p average: #{data.userinfo_avg_rounded}
  p about: 
  div(style="white-space: pre-wrap")
    small
      !=data.userinfo_about
  p
  p Comment karma:  #{data.comment_karma}  (#{data.comment_count} comments)
  p Story karma: #{data.story_karma} (#{data.story_count} stories)
  p % comment karma: #{data.comment_karma_percent}
  p Unknown karma (deletions/lag/?): #{data.unknown_karma}

  <a href="https://hn.algolia.com/#!/all/forever/prefix/0/author%3A#{data.author}">hnsearch</a>&nbsp;&nbsp;<a href="https://news.ycombinator.com/user?id=#{data.author}">hn profile</a>&nbsp;&nbsp;<a href="./csv/" download>Download CSV</a>&nbsp;&nbsp;<a href="./stats_csv/" download>Download Metadata CSV</a>&nbsp;&nbsp;<a href="./json/" download>Download JSON</a>

  link(rel='stylesheet', href='/stylesheets/nv.d3.min.css')
  link(rel='stylesheet', href='/stylesheets/hnuserweb.css')

  div(id="chart1")
    svg
  div(id="chart2")
    svg
  div(id="chart3")
    svg
  div(id="chart4")
    svg
  div(id="chart5")
    svg
  div(id="chart6")
    svg
  div(id="chart7")
    svg
  div(id="chart8")
    svg

  script.
    var data = !{JSON.stringify(data)}

  script(src="/lib/d3.v3.js")
  script(src="/lib/nv.d3.min.js")

  script.
    createPieChart = function(id, labels, values)
    {
      if (labels.length !== values.length)
        console.log("error creating pie chart: labels and values lengths differ");

      var chart_data = [];
      for (i = 0; i < labels.length; i++)
        chart_data.push({"label": labels[i], "value": values[i]});

      nv.addGraph(function() {
        var chart = nv.models.pieChart()
            .x(function(d) { return d.label })
            .y(function(d) { return d.value })
            .showLabels(true);

          d3.select("#" + id + " svg")
              .datum(chart_data)
            .transition().duration(1200)
              .call(chart);

        return chart;
      });        
    };

    createLineChart = function(id, labels, values)
    {
      console.log("hi");
      
      nv.addGraph(function() {
        var values_for_chart = {};
        values_for_chart.values = values;
        values_for_chart.key = "Sine Wave";
        values_for_chart.color = "#ff7f0e";
        console.log(values_for_chart);
        var chart = nv.models.lineChart()
          .options({
            margin: {left: 100, bottom: 100},
            x: function(d,i) { return i},
            showXAxis: true,
            showYAxis: true,
            transitionDuration: 250
          });
          
          // chart sub-models (ie. xAxis, yAxis, etc) when accessed directly, return themselves, not the parent chart, so need to chain separately
          chart.xAxis
            //.axisLabel("Time (s)")
            //.tickFormat(d3.format(',.1f'))

          .yAxis
            //.axisLabel('Voltage (v)')
            //.tickFormat(d3.format(',.2f'))
            ;

        d3.select('#' + id + ' svg')
          .datum(values_for_chart)
          .call(chart);

        nv.utils.windowResize(chart.update);

        return chart;
      });
      
    }

    // TODO: create multiple charts here based on data i have
    createPieChart("chart1", ["# stories", "# comments"], [data.story_count, data.comment_count]);
    createPieChart("chart2", ["story karma", "comment karma", "Unknown (deleted?)"], [data.story_karma, data.comment_karma, data.unknown_karma]);
    createLineChart("chart3", ["karma", "time"], [{"x": 1, "y": 100}, {"x": 100, "y": 500}]);

    //createPieChart("chart4", ["One", "Two", "Three"], [100, 200, 300]);
    //createPieChart("chart5", ["One", "Two", "Three"], [100, 200, 300]);
    //createPieChart("chart6", ["One", "Two", "Three"], [100, 200, 300]);
    //createPieChart("chart7", ["One", "Two", "Three"], [100, 200, 300]);
    //createPieChart("chart8", ["One", "Two", "Three"], [100, 200, 300]);
